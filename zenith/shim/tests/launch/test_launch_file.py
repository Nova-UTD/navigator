from launch.launch_file import LaunchFileBuffer, LaunchFileNode, LaunchFile, Metadata, LaunchFileFromExisting, LaunchFileBuilder

def test_launch_node_from_string_simple():
    raw = "Node(package='joy_translation', executable='joy_translation_node')"
    node = LaunchFileNode.from_string(raw)
    assert node.package == "joy_translation"
    assert node.executable == "joy_translation_node"

def test_launch_node_from_string_multiline():
    raw = """
    Node(
        package='joy_translation',
        executable='joy_translation_node'
    )
    """
    node = LaunchFileNode.from_string(raw)
    assert node.package == "joy_translation"
    assert node.executable == "joy_translation_node"

def test_metadata_from_string():
    raw = """
    name: my_launch_file
    """

    metadata = Metadata.from_string(raw)
    assert metadata.name == "my_launch_file"

VALID_LAUNCH_FILE = """
\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---metadata
# name: Launch File
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

from launch import LaunchDescription
from launch.actions import RegisterEventHandler, LogInfo
from launch.event_handlers import OnProcessStart
from launch_ros.actions import Node

\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---launch_list
LAUNCH_LIST = [
    Node(
        package='joy_translation',
        executable='joy_translation_node'
    )
]
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

def generate_launch_description():
    return LaunchDescription([
        map_manager_carla,
        RegisterEventHandler(
            OnProcessStart(
                target_action=map_manager_carla,
                on_start=[
                    LogInfo(msg='Map Manager Started... launching the rest of Navigator...'),
                    \"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
                    # ---launch__list_insert
                    *LAUNCH_LIST,
                    # ---
                    \"\"\"END OF GENERATED SECTION\"\"\"
                ]
            )
        )
    ])
"""

INVALID_LAUNCH_FILE_MISSING_METADATA ="""
from launch import LaunchDescription
from launch.actions import RegisterEventHandler, LogInfo
from launch.event_handlers import OnProcessStart
from launch_ros.actions import Node

\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---launch_list
LAUNCH_LIST = [
    Node(
        package='joy_translation',
        executable='joy_translation_node'
    )
]
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

def generate_launch_description():
    return LaunchDescription([
        map_manager_carla,
        RegisterEventHandler(
            OnProcessStart(
                target_action=map_manager_carla,
                on_start=[
                    LogInfo(msg='Map Manager Started... launching the rest of Navigator...'),
                    \"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
                    # ---launch__list_insert
                    *LAUNCH_LIST,
                    # ---
                    \"\"\"END OF GENERATED SECTION\"\"\"
                ]
            )
        )
    ])
"""

INVALID_LAUNCH_FILE_MISSING_IMPORTS ="""
\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---metadata
# name: Launch File
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

from launch import LaunchDescription
from launch_ros.actions import Node

\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---launch_list
LAUNCH_LIST = [
    Node(
        package='joy_translation',
        executable='joy_translation_node'
    )
]
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

def generate_launch_description():
    return LaunchDescription([
        map_manager_carla,
        RegisterEventHandler(
            OnProcessStart(
                target_action=map_manager_carla,
                on_start=[
                    LogInfo(msg='Map Manager Started... launching the rest of Navigator...'),
                    \"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
                    # ---launch__list_insert
                    *LAUNCH_LIST,
                    # ---
                    \"\"\"END OF GENERATED SECTION\"\"\"
                ]
            )
        )
    ])
"""

INVALID_LAUNCH_FILE_MISSING_LAUNCH_LIST = """
\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---metadata
# name: Launch File
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

from launch import LaunchDescription
from launch.actions import RegisterEventHandler, LogInfo
from launch.event_handlers import OnProcessStart
from launch_ros.actions import Node

def generate_launch_description():
    return LaunchDescription([
        map_manager_carla,
        RegisterEventHandler(
            OnProcessStart(
                target_action=map_manager_carla,
                on_start=[
                    LogInfo(msg='Map Manager Started... launching the rest of Navigator...'),
                    \"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
                    # ---launch__list_insert
                    *LAUNCH_LIST,
                    # ---
                    \"\"\"END OF GENERATED SECTION\"\"\"
                ]
            )
        )
    ])
"""

INVALID_LAUNCH_FILE_MISSING_LAUNCH_LIST_INSERT = """
\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---metadata
# name: Launch File
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

from launch import LaunchDescription
from launch.actions import RegisterEventHandler, LogInfo
from launch.event_handlers import OnProcessStart
from launch_ros.actions import Node

\"\"\"THIS SECTION WAS GENERATED BY zenith/shim. DO NOT MODIFY.\"\"\"
# ---launch_list
LAUNCH_LIST = [
    Node(
        package='joy_translation',
        executable='joy_translation_node'
    )
]
# ---
\"\"\"END OF GENERATED SECTION\"\"\"

def generate_launch_description():
    return LaunchDescription([
        map_manager_carla,
        RegisterEventHandler(
            OnProcessStart(
                target_action=map_manager_carla,
                on_start=[
                    LogInfo(msg='Map Manager Started... launching the rest of Navigator...'),
                ]
            )
        )
    ])
"""


def test_launch_file_buffer_valid():
    buf = LaunchFileBuffer(VALID_LAUNCH_FILE)
    print(str(buf))
    assert buf.valid()

def test_launch_file_buffer_invalid():    
    buf = LaunchFileBuffer(INVALID_LAUNCH_FILE_MISSING_METADATA)
    print(str(buf))
    assert not buf.valid()

def test_launch_file_buffer_ensure_metadata():
    buf = LaunchFileBuffer(INVALID_LAUNCH_FILE_MISSING_METADATA)
    buf._ensure_metadata(Metadata(name="Launch File"))
    print(str(buf))
    assert buf.valid()
    assert LaunchFileFromExisting(str(buf)).metadata.name == "Launch File"

def test_launch_file_buffer_ensure_imports():
    buf = LaunchFileBuffer(INVALID_LAUNCH_FILE_MISSING_IMPORTS)
    buf._ensure_imports()
    print(str(buf))
    assert buf.valid()

def test_launch_file_buffer_ensure_launch_list():
    buf = LaunchFileBuffer(INVALID_LAUNCH_FILE_MISSING_LAUNCH_LIST)
    buf._inject_launch_list([LaunchFileNode("joy_translation", "joy_translation_node")])
    print(str(buf.buffer))
    assert buf.valid()

def test_launch_file_buffer_add_node():
    buf = LaunchFileBuffer(INVALID_LAUNCH_FILE_MISSING_LAUNCH_LIST_INSERT)
    buf._inject_launch_list_insert()
    print(str(buf))
    assert buf.valid()

def test_launch_file_edit_from_existing():
    launch_file = LaunchFile(VALID_LAUNCH_FILE)
    existing_launch_file = launch_file.edit()(VALID_LAUNCH_FILE)
    assert isinstance(existing_launch_file, LaunchFileFromExisting)

def test_launch_file_edit_builder():
    launch_file = LaunchFile(INVALID_LAUNCH_FILE_MISSING_IMPORTS)
    launch_file = launch_file.edit()(INVALID_LAUNCH_FILE_MISSING_IMPORTS)
    assert isinstance(launch_file, LaunchFileBuilder)
